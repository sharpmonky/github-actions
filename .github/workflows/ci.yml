name: CI
on:
  pull_request:
    branches: [develop, master]
  push:
    branches: [develop, master]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: cache node_modules
        uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: setup node
        uses: actions/setup-node@v1
        with:
          node-version: "12.x"
      - name: yarn install
        run: yarn install
      - name: eslint
        run: yarn eslint
      - name: jest test
        run: yarn test --coverage
        env:
          CI: true
      - name: upload test coverage
        uses: actions/upload-artifact@v1
        with:
          name: code-coverage
          path: coverage
      - name: build
        if: github.event_name == 'push'
        run: yarn build
      - uses: actions/download-artifact@v2
        with:
          name: code-coverage
      if: github.event_name == 'push' && github.ref == 'refs/heads/master'
      - name: create release note
        run: yarn semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: deploy
        if: github.event_name == 'push'
        run: yarn surge --project ./build --domain udemy-github-actions.surge.sh
        env:
          SURGE_LOGIN: ${{ secrets.SURGE_LOGIN }}
          SURGE_TOKEN: ${{ secrets.SURGE_TOKEN }}

